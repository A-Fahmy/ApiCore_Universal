//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BTS.Data
{
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using BTS.Entities;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using System;

    public partial class RiseDBEntities : DbContext
    {
        public RiseDBEntities()
            : base("name=RiseDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Contact_WorkPlaces> Contact_WorkPlaces { get; set; }
        public virtual DbSet<Lookup_Banks> Lookup_Banks { get; set; }
        public virtual DbSet<Lookup_Cities> Lookup_Cities { get; set; }
        public virtual DbSet<Lookup_Countries> Lookup_Countries { get; set; }
        public virtual DbSet<Lookup_Expertises> Lookup_Expertises { get; set; }
        public virtual DbSet<Lookup_Provinces> Lookup_Provinces { get; set; }
        public virtual DbSet<Lookup_RCL> Lookup_RCL { get; set; }
        public virtual DbSet<LOV> LOVs { get; set; }
        public virtual DbSet<RCC_STS> RCC_STS { get; set; }
        public virtual DbSet<Contact_Expertise> Contact_Expertise { get; set; }
        public virtual DbSet<Contact_Countries> Contact_Countries { get; set; }
        public virtual DbSet<Contact_WorkPlacesProposed> Contact_WorkPlacesProposed { get; set; }
        public virtual DbSet<Lookup_ExpertiseRCL> Lookup_ExpertiseRCL { get; set; }
        public virtual DbSet<Sync_Flag> Sync_Flag { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Book_History> Book_History { get; set; }
        public virtual DbSet<Discount> Discounts { get; set; }
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<Bookinglink> Bookinglinks { get; set; }
        public virtual DbSet<Deduction> Deductions { get; set; }
        public virtual DbSet<NotificationDescription> NotificationDescriptions { get; set; }
        public virtual DbSet<ScheduledNotification> ScheduledNotifications { get; set; }
        public virtual DbSet<RV> RVs { get; set; }
        public virtual DbSet<PostRV_Questions> PostRV_Questions { get; set; }
        public virtual DbSet<Suspension> Suspensions { get; set; }
        public virtual DbSet<Contact_Report> Contact_Report { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<CustomNotification> CustomNotifications { get; set; }
        public virtual DbSet<Lookup_BankBranch> Lookup_BankBranch { get; set; }
        public virtual DbSet<DuePayment> DuePayments { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Contact_CV> Contact_CV { get; set; }
        public virtual DbSet<Lookup_FileTypes> Lookup_FileTypes { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GroupPermession> GroupPermessions { get; set; }
        public virtual DbSet<FielsUpload> FielsUploads { get; set; }
        public virtual DbSet<Lookup_Status> Lookup_Status { get; set; }
        public virtual DbSet<Log_FielsUpload> Log_FielsUpload { get; set; }
        public virtual DbSet<Lookup_Language> Lookup_Language { get; set; }
        public virtual DbSet<RiseStoredPlace> RiseStoredPlaces { get; set; }
        public virtual DbSet<OnlineForm> OnlineForms { get; set; }
        public virtual DbSet<Package> Packages { get; set; }
        public virtual DbSet<FinsStatement> FinsStatements { get; set; }
        public virtual DbSet<SpecialExpertise> SpecialExpertises { get; set; }
        public virtual DbSet<TransactionPayment> TransactionPayments { get; set; }
        public virtual DbSet<Contact_MeetingPoints> Contact_MeetingPoints { get; set; }
        public virtual DbSet<OnlineFormJop> OnlineFormJops { get; set; }
        public virtual DbSet<FeaturedExpertise> FeaturedExpertises { get; set; }
        public virtual DbSet<ExpertiseSuggestion> ExpertiseSuggestions { get; set; }
        public virtual DbSet<Lookup_Help> Lookup_Help { get; set; }
        public virtual DbSet<PackageInfo> PackageInfoes { get; set; }
        public virtual DbSet<alternativeType> alternativeTypes { get; set; }
        public virtual DbSet<alternativeContact> alternativeContacts { get; set; }
        public virtual DbSet<FeaturedExpertiseLog> FeaturedExpertiseLogs { get; set; }
    
        public virtual ObjectResult<GetAll_FielsUpload_ByGroupByUserID_Result> GetAll_FielsUpload_ByGroupByUserID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAll_FielsUpload_ByGroupByUserID_Result>("GetAll_FielsUpload_ByGroupByUserID");
        }
    
        public virtual int Update_ApproveYN(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_ApproveYN", userIDParameter);
        }
    
        public virtual int Update_FreezeYN(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_FreezeYN", userIDParameter);
        }
    
        public virtual int Update_PrimaryCheck(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_PrimaryCheck", userIDParameter);
        }
    
        public virtual int Update_SecondCheckYN(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_SecondCheckYN", userIDParameter);
        }
    
        public virtual int CallWebService(string parameters)
        {
            var parametersParameter = parameters != null ?
                new ObjectParameter("parameters", parameters) :
                new ObjectParameter("parameters", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CallWebService", parametersParameter);
        }
    
        public virtual ObjectResult<GetContact_by_ParentExpCode_Result> GetContact_by_ParentExpCode(Nullable<int> parentExpCode)
        {
            var parentExpCodeParameter = parentExpCode.HasValue ?
                new ObjectParameter("ParentExpCode", parentExpCode) :
                new ObjectParameter("ParentExpCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContact_by_ParentExpCode_Result>("GetContact_by_ParentExpCode", parentExpCodeParameter);
        }
    }
}
